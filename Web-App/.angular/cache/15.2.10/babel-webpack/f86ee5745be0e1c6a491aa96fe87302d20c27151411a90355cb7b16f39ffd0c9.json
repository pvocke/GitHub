{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar PostService = /** @class */function () {\n  function PostService(http) {\n    this.http = http;\n    this.posts = [];\n    this.postUpdated = new Subject();\n  }\n  PostService.prototype.getPosts = function () {\n    var _this = this;\n    this.http.get('http://localhost:3000/api/posts').subscribe(function (postData) {\n      _this.posts = postData.posts;\n      _this.postUpdated.next(__spreadArray([], _this.posts, true));\n    });\n  };\n  PostService.prototype.getPostUpdateListener = function () {\n    return this.postUpdated.asObservable();\n  };\n  PostService.prototype.addPost = function (title, content) {\n    var post = {\n      id: null,\n      title: title,\n      content: content\n    };\n    this.posts.push(post);\n    this.postUpdated.next(__spreadArray([], this.posts, true));\n  };\n  PostService.ɵfac = function PostService_Factory(t) {\n    return new (t || PostService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  PostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostService,\n    factory: PostService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostService;\n}();\nexport { PostService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}