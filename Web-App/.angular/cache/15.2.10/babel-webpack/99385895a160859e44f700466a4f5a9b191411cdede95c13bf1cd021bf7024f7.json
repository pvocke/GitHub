{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { PostService } from \"../post.service\";\nimport { mimeType } from \"./mime-type.validator\";\nvar PostCreateComponent = /** @class */function () {\n  function PostCreateComponent(postService, route) {\n    this.postService = postService;\n    this.route = route;\n    this.enteredTitle = \"\";\n    this.enteredContent = \"\";\n    this.isLoading = false;\n    this.mode = \"create\";\n  }\n  PostCreateComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      content: new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    });\n    this.route.paramMap.subscribe(function (paramMap) {\n      if (paramMap.has(\"postId\")) {\n        _this.mode = \"edit\";\n        _this.postId = paramMap.get(\"postId\");\n        _this.isLoading = true;\n        _this.postsService.getPost(_this.postId).subscribe(function (postData) {\n          _this.isLoading = false;\n          _this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath\n          };\n          _this.form.setValue({\n            title: _this.post.title,\n            content: _this.post.content,\n            image: _this.post.imagePath\n          });\n        });\n      } else {\n        _this.mode = \"create\";\n        _this.postId = null;\n      }\n    });\n  };\n  PostCreateComponent.prototype.onImagePicked = function (event) {\n    var _this = this;\n    var file = event.target.files[0];\n    this.form.patchValue({\n      image: file\n    });\n    this.form.get(\"image\").updateValueAndValidity();\n    var reader = new FileReader();\n    reader.onload = function () {\n      _this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(file);\n  };\n  PostCreateComponent.prototype.onSavePost = function () {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.postsService.addPost(this.form.value.title, this.form.value.content, this.form.value.image);\n    } else {\n      this.postsService.updatePost(this.postId, this.form.value.title, this.form.value.content, this.form.value.image);\n    }\n    this.form.reset();\n  };\n  var _a;\n  PostCreateComponent = __decorate([Component({\n    selector: \"app-post-create\",\n    templateUrl: \"./post-create.component.html\",\n    styleUrls: [\"./post-create.component.css\"]\n  }), __metadata(\"design:paramtypes\", [typeof (_a = typeof PostService !== \"undefined\" && PostService) === \"function\" ? _a : Object, ActivatedRoute])], PostCreateComponent);\n  return PostCreateComponent;\n}();\nexport { PostCreateComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}